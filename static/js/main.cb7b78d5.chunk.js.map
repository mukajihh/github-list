{"version":3,"sources":["commit-list/commit-list.js","App.js","serviceWorker.js","index.js"],"names":["CommitList","state","search","commits","_this","props","commitsFiltered","filterList","event","filtered","filter","commit","message","toLowerCase","target","value","setState","handleChange","name","Object","defineProperty","this","react_default","a","createElement","className","index_es","container","spacing","item","xs","variant","label","onChange","InputProps","startAdornment","position","Search_default","length","elevation","dense","map","key","sha","primary","secondary","author","React","Component","App","username","userSearched","repositories","noRepositories","showRepositories","showCommits","searchRepositoriesByUsername","fetch","then","response","json","handleKeyPress","onCardClick","repository","splice","backToRepositories","_this2","component","placeholder","onKeyPress","aria-label","onClick","justify","id","gutterBottom","description","language","ArrowBack_default","commit_list_commit_list","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb7b78d5.chunk.js","sourcesContent":["import React from 'react';\nimport { Grid, List, ListItem, ListItemText, Paper, TextField, InputAdornment } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport './commit-list.scss';\n\nclass CommitList extends React.Component {\n  \n  state = {\n    search: '',\n    commits: this.props.commits,\n    commitsFiltered: this.props.commits\n  }\n\n  filterList = (event) => {\n    let filtered = this.state.commits;\n    filtered = filtered.filter(commit => {\n      return commit.commit.message.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\n    })\n    this.setState({\n      commitsFiltered: filtered\n    })\n  }\n\n  handleChange = name => event => {\n    this.filterList(event);\n    this.setState({ [name]: event.target.value });\n  };\n\n  componentWillReceiveProps(props) {\n    this.setState({\n      commits: props.commits,\n      commitsFiltered: props.commits\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"commit-list\">\n        <Grid container spacing={0}>\n          <Grid item xs={12}>\n            <TextField\n              className=\"search-field\"\n              variant=\"outlined\"\n              label=\"Search\"\n              value={this.state.search}\n              onChange={this.handleChange('search')}\n              InputProps={{\n                startAdornment: <InputAdornment position=\"start\"><SearchIcon/></InputAdornment>,\n              }}\n            />\n\n            {this.state.commitsFiltered.length > 0 &&\n              <Paper elevation={1}>\n                <List dense>\n                  {this.state.commitsFiltered.map(commit => (\n                    <ListItem key={commit.sha}>\n                      <ListItemText\n                        primary={commit.commit.message}\n                        secondary={commit.commit.author.name}\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            }\n            {this.state.commitsFiltered.length === 0 &&\n              <span>couldn't found commits</span>\n            }\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\nexport default CommitList;\n","import React from 'react';\nimport { Paper, IconButton, InputBase, Card, CardActionArea, CardContent, Typography, Grid } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport './App.scss';\nimport CommitList from './commit-list/commit-list';\n\nclass App extends React.Component {\n  \n  state = {\n    username: '',\n    userSearched: '',\n    repositories: [],\n    noRepositories: false,\n    commits: [],\n    showRepositories: false,\n    showCommits: false\n  }\n\n\n  searchRepositoriesByUsername = () => {\n    fetch('http://api.github.com/users/'+ this.state.username +'/repos')\n    .then( response => {\n      return response.json();\n    })\n    .then( repositories => {\n      if (repositories.length) {\n        this.setState({\n          userSearched: this.state.username,\n          repositories: repositories,\n          noRepositories: false,\n          showRepositories: true,\n          showCommits: false\n        });\n      } else {\n        this.setState({\n          userSearched: '',\n          repositories: [],\n          noRepositories: true,\n          showRepositories: false,\n          showCommits: false\n        });\n      }\n    })\n    ;\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  }\n\n  handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      this.searchRepositoriesByUsername();\n    }\n  }\n\n  onCardClick = repository => {\n    fetch('http://api.github.com/repos/' + this.state.userSearched + '/' + repository.name + '/commits')\n    .then(response => {\n      return response.json();\n    })\n    .then(commits => {\n      if (!commits.length) {\n        commits = [];\n      }\n      if (commits.length >= 20) {\n        commits = commits.splice(0, 20);\n      }\n      \n      this.setState({\n        commits: commits,\n        showCommits: true,\n        showRepositories: false\n      })\n    });\n  }\n\n  backToRepositories = () => {\n    this.setState({\n      commits: [],\n      showCommits: false,\n      showRepositories: true\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Typography component=\"p\" variant=\"h5\">\n            GitHub repositories list\n          </Typography>\n          <Typography component=\"p\">\n            Introduce a GitHub username to iniciate\n          </Typography>\n          <Paper elevation={1}>\n            <InputBase\n              placeholder=\"GitHub Username\"\n              value={this.state.username}\n              onChange={this.handleChange('username')}\n              onKeyPress={this.handleKeyPress}\n            />\n            <IconButton\n              aria-label=\"Search\"\n              onClick={this.searchRepositoriesByUsername}\n            >\n              <SearchIcon />\n            </IconButton>\n          </Paper>\n        </header>\n\n        <main>\n          {this.state.showRepositories &&\n            <Grid container spacing={0} className=\"repositories\">\n              <Grid item xs={12}>\n                <Grid container justify=\"center\" spacing={24}>\n                  {this.state.noRepositories &&\n                    <span>couldn't found repositories</span>\n                  }\n                  {this.state.repositories.map(repository => (\n                    <Grid key={repository.id} item className=\"card-container\">\n                      <Card className=\"card\">\n                        <CardActionArea onClick={() => this.onCardClick(repository)}>\n                          <CardContent className=\"card-content\">\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                              {repository.name}\n                            </Typography>\n                            <Typography component=\"p\">\n                              {repository.description}\n                            </Typography>\n                            <Typography component=\"span\">\n                              {repository.language}\n                            </Typography>\n                          </CardContent>\n                        </CardActionArea>\n                      </Card>\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          }\n          {this.state.showCommits &&\n            <div className=\"commits-container\">\n              <div className=\"back-container\">\n                <IconButton onClick={this.backToRepositories}>\n                  <ArrowBack />\n                </IconButton>\n                <span>Back to repositories</span>\n              </div>\n              <CommitList commits={this.state.commits}></CommitList>\n            </div>\n          }\n        </main>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}